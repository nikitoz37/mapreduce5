version: '3'

secrets:
  postgres_user:
    file: ./secrets/postgres_user.txt
  postgres_password:
    file: ./secrets/postgres_password.txt
    

services:
  db:
    container_name: db
    restart: always
    image: postgres:latest
    secrets:
      - postgres_user
      - postgres_password
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: top_words_db
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    volumes:
    #  - ./pgdata:/var/lib/postgresql/data/
    #  - pgdata:/var/lib/postgresql
    - pgdata:/var/lib/postgresql/data
    #networks:
    #  - mapreduce-network

  master:
    container_name: master
    restart: always
    build: 
      context: ./master
      dockerfile: master.Dockerfile
    links:
      - db:db
    secrets:
      - postgres_user
      - postgres_password
    environment:
      DEBUG: False
      POSTGRES_DB: top_words_db
      DATABASE_PORT: 5432
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      #DB_URL: postgresql://postgres:postgres@db:5432/top_words_db
      #FLASK_DEBUG: "true"
    ports:
      - "8000:5000"
    network_mode: host
    #networks:
    #  - mapreduce-network
    depends_on:
      - db
      - slave1
      - slave2

  slave1:
    container_name: slave1
    restart: always
    build: 
      context: ./slave
      dockerfile: slave1.Dockerfile
    environment:
      FLASK_DEBUG: "true"
    ports:
      - "8001:5000"
    network_mode: host
  #  networks:
  #    - mapreduce-network
  #  depends_on:
  #    - postgres

  slave2:
    container_name: slave2
    restart: always
    build: 
      context: ./slave
      dockerfile: slave2.Dockerfile
    environment:
      FLASK_DEBUG: "true"
    ports:
      - "8002:5000"
    network_mode: host
  #  networks:
  #    - mapreduce-network
  #  depends_on:
  #    - postgres


volumes:
  pgdata: {}


#networks:
#  mapreduce-network:
#    driver: bridge